name: build ⚙️

on: [ push, pull_request ]

jobs:
    test:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                python-version: ['3.10', '3.11', '3.12']
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              name: Setup Python ${{ matrix.python-version }}
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install poetry
              uses: abatilo/actions-poetry@v2
            - name: Setup a local virtual environment (if no poetry.toml file)
              run: |
                    poetry config virtualenvs.create true --local
                    poetry config virtualenvs.in-project true --local
            - uses: actions/cache@v3
              name: Define a cache for the virtual environment based on the dependencies lock file
              with:
                    path: ./.venv
                    key: venv-${{ hashFiles('poetry.lock') }}
            - name: Install the project dependencies
              run: poetry install
            - name: Lint with ruff
              run: ruff check src
            - name: Check with mypy
              run: mypy .
            - name: Run the automated tests
              run: poetry run pytest -v
