name: build ⚙️

on:
  push:
    branches:
      - main
    paths-ignore:
      - '!**.md'
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '!**.md'
      - 'docs/**'
  release:
    types:
      - released

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Setup Python ${{ matrix.python-version }}
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Lint with ruff
        run: poetry run ruff check src
      - name: Check with mypy
        run: poetry run mypy .
      - name: Run tests
        run: poetry run pytest -v --cov=src
